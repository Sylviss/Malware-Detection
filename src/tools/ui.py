import tkinter as tk
from tkinter import ttk
from tkinter import filedialog as fd
from tkinter.messagebox import showinfo
import tkinter.scrolledtext as sc
import time, random
import threading
import sys, os
from glob import glob

values = ['Random Forest', 'Decision Tree',
          'Support Vector Machine', 'K-Nearest Neighbors',
          'Logistic Regression',
          'LightGBM', 'AdaBoost',
          '1 Layer Neural Network', '2 Layer Neural Network',
          'Convolutional Neural Network', 'Ensemble Neural Network',]

def select_files():
    info.delete(1.0, tk.END)
    filename = fd.askopenfilenames(
        title='Open a file',
        initialdir='/')
    progress_activate(filename)

def select_folder():
    info.delete(1.0, tk.END)
    foldername = fd.askdirectory(
        title='Select a folder',
        initialdir='/'
    )
    progress_activate(foldername)

def loading(bar, parent, thread, step = 10):
    if thread.is_alive():
        bar['value'] += step
        if bar['value'] == 100 or bar['value'] == 0:
            step = -step
        parent.after(100, loading, bar, parent, thread, step)
    else:
        bar.pack_forget()

def a(old, info, i = 1):
    old.config(text=f'{i}/10 files scanned')
    text = f'File {i} is '+random.choice(['malware', 'benign'])+'\n'
    time.sleep(0.1)
    i+=1
    if i<5:
        info.insert(tk.END, text)
        a(old, info, i)
    else:
        old.pack_forget()
        info.insert(tk.END, 'Scan completed\n')

def progress_activate():
    for th in threading.enumerate():
        if th != threading.main_thread():
            showinfo(
                title='Error',
                message='A scan is already in progress'
            )
            return
    info.insert(tk.END, 'File 0 is benign' + ', model is ' + m.get() +'\n')
    bruh.pack(expand=True, pady=10)
    begin = ttk.Label(load, text='Begin scanning files...\n0/10 files scanned', font=('Arial', 15))
    begin.pack(expand=True)
    new_thread = threading.Thread(target=a, args=[begin, info])
    new_thread.start()
    loading(bruh, iframe, new_thread)
    
    
if __name__ == '__main__':
    # create the root window
    gui = tk.Tk()
    gui.title('Malware Detection System')
    gui.resizable(False, False)
    gui.geometry('750x700')

    # create the file chooser frame
    fframe = ttk.Frame(gui)
    fframe.pack(expand=False, fill=tk.BOTH, ipadx=10, ipady=10)

    # create the information frame
    iframe = ttk.Frame(gui)
    iframe.pack(expand=True, fill=tk.BOTH)
    load = ttk.Frame(iframe)
    load.pack(expand=True)
    infor = ttk.Frame(iframe)
    infor.pack(expand=True)

    # open buttons
    open_file_button = ttk.Button(
        fframe,
        text='Open a File',
        command=select_files
    )

    open_folder_button = ttk.Button(
        fframe,
        text='Open a Folder',
        command=select_folder
    )



    # chooser label
    label_1 = ttk.Label(fframe, text='Please choose file(s) or a folder', font=('Arial', 15))
    
    # model chosser
    mlabel = ttk.Label(fframe, text='Choose a model', font=('Arial', 15))
    m = tk.StringVar()
    modelchooser = ttk.Combobox(load, textvariable=m, values=values, state='readonly')
    modelchooser.config(width=30)
    modelchooser.pack(expand=True, pady=10)
    modelchooser.current(0)

    # information widgets
    bruh = ttk.Progressbar(load, orient='horizontal', length=200, mode='indeterminate')
    
    label_1.pack(expand=True, pady=10)
    open_file_button.pack(expand=True, pady=10, side=tk.LEFT)
    open_folder_button.pack(expand=True, pady=10, side=tk.RIGHT)
    info = sc.ScrolledText(infor, font=('Arial', 15))
    info.pack(expand=True, fill=tk.BOTH)

    # run the application
    try:
        gui.mainloop()
    except KeyboardInterrupt:
        sys.exit(0)

