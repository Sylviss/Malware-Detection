from torch import nn
import pickle

class Ann_2_2(nn.Module):
    def __init__(self, n, m, dropout_rate):
        super().__init__()
        self.input = nn.Linear(198, n)
        self.acti1 = nn.ReLU()
        self.hidden1 = nn.Linear(n, m)
        self.acti2 = nn.ReLU()
        self.dropout = nn.Dropout(dropout_rate)
        self.output = nn.Linear(m, 1)
        # May not need this if using defualt loss function
        # self.acti3 = nn.Softmax(dim=1)

    def forward(self, X):
        X = self.acti1(self.input(X))
        X = self.acti2(self.hidden1(X))
        X = self.dropout(X)
        X = self.output(X)
        return X
    
def ann_2():
    with open('models/2nn.pkl', 'rb') as f:
        model = pickle.load(f)
    return model